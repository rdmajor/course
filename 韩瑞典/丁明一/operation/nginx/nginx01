案例1：搭建Nginx服务器
步骤一：构建Nginx服务器
1）使用源码包安装nginx软件包
[root@proxy ~]# yum -y install gcc pcre-devel openssl-devel     //安装依赖包
[root@proxy ~]# useradd -s /sbin/nologin nginx
[root@proxy ~]# tar  -xf   nginx-1.10.3.tar.gz
[root@proxy ~]# cd  nginx-1.10.3
[root@proxy nginx-1.10.3]# ./configure   \
> --prefix=/usr/local/nginx   \                //指定安装路径
> --user=nginx   \                            //指定用户
> --group=nginx  \                            //指定组
> --with-http_ssl_module                        //开启SSL加密功能
.. ..
[root@proxy nginx-1.10.3]# make && make install    //编译并安装

2）nginx命令的用法
[root@proxy ~]# /usr/local/nginx/sbin/nginx                    //启动服务
[root@proxy ~]# /usr/local/nginx/sbin/nginx -s stop            //关闭服务
[root@proxy ~]# /usr/local/nginx/sbin/nginx -s reload        //重新加载配置文件
[root@proxy ~]# /usr/local/nginx/sbin/nginx –V                //查看软件信息

netstat命令可以查看系统中启动的端口信息，该命令常用选项如下：
-a显示所有端口的信息
-n以数字格式显示端口号
-t显示TCP连接的端口
-u显示UDP连接的端口
-l显示服务正在监听的端口信息，如httpd启动后，会一直监听80端口
-p显示监听端口的服务名称是什么（也就是程序名称）
注意：在RHEL7系统中可以使用ss命令替代netstat命令，功能一样，选项一样

3）设置防火墙与SELinux
[root@proxy ~]# firewall-cmd --set-default-zone=trusted
[root@proxy ~]# setenforce 0

4）测试首页文件
Nginx Web服务默认首页文档存储目录为/usr/local/nginx/html/

步骤二：升级Nginx服务器
1）编译新版本nginx软件
[root@proxy ~]# tar  -zxvf   nginx-1.12.2.tar.gz
[root@proxy ~]# cd nginx-1.12.2
[root@proxy nginx-1.12.2]# ./configure   \
> --prefix=/usr/local/nginx   \ 
> --user=nginx   \ 
> --group=nginx  \ 
> --with-http_ssl_module
[root@proxy nginx-1.12.2]# make   

2) 备份老的nginx主程序，并使用编译好的新版本nginx替换老版本
[root@proxy nginx-1.12.2]# mv /usr/local/nginx/sbin/nginx{,a}
[root@proxy nginx-1.12.2]# cp objs/nginx  /usr/local/nginx/sbin/    //拷贝新版本
[root@proxy nginx-1.12.2]# make upgrade                            //升级

案例2：用户认证
步骤一：修改Nginx配置文件

1）修改/usr/local/nginx/conf/nginx.conf
.. ..
server {
        listen       80;
        server_name  localhost;
        auth_basic "Input Password:";                        //认证提示符
        auth_basic_user_file "/usr/local/nginx/pass";        //认证密码文件
        location / {
            root   html;
            index  index.html index.htm;
        }
  }

2）生成密码文件，创建用户及密码,使用htpasswd命令创建账户文件
[root@proxy ~]# yum -y install  httpd-tools
[root@proxy ~]# htpasswd -c /usr/local/nginx/pass 用户名 //创建密码文件,追加用户，不使用-c选项

案例3：基于域名的虚拟主机
虚拟主机一般可用分为：基于域名、基于IP和基于端口的虚拟主机。
步骤一：修改配置文件

1）修改Nginx服务配置
.. ..
server {
           listen       80;                                      //端口
           server_name  www.a.com;                                //域名
	     auth_basic "Input Password:";                        //认证提示符
           auth_basic_user_file "/usr/local/nginx/pass";        //认证密码文件
     location / {
            root   html;                                    //指定网站根路径
            index  index.html index.htm;
       }
       
}
server {
           listen  80;                                        //端口
           server_name  www.b.com;                            //域名
	 location / { 
	     root   www;                                 //指定网站根路径
	     index  index.html index.htm;
	  }
}
2）创建网站根目录及对应首页文件
[root@proxy ~]# mkdir /usr/local/nginx/www
[root@proxy ~]# echo "www" > /usr/local/nginx/www/index.html

案例4：SSL虚拟主机
源码安装Nginx时必须使用--with-http_ssl_module参数，启用加密模块，对于需要进行SSL加密处理的站点添加ssl相关指令（设置网站需要的私钥和证书）。
加密算法一般分为对称算法、非对称算法、信息摘要。
对称算法有：AES、DES，主要应用在单机数据加密。
非对称算法有：RSA、DSA，主要应用在网络数据加密。
信息摘要：MD5、sha256，主要应用在数据完整性校验、数据秒传等。

步骤一：配置SSL虚拟主机
1）生成私钥与证书
[root@proxy ~]# cd /usr/local/nginx/conf
[root@proxy ~]# openssl genrsa > cert.key                            //生成私钥
[root@proxy ~]# openssl req -new -x509 -key cert.key > cert.pem      //生成证书

2）修改Nginx配置文件，设置加密网站的虚拟主机
… …    
server {
           listen       443 ssl;
           server_name            www.c.com;
           ssl_certificate      cert.pem;         #这里是证书文件
           ssl_certificate_key  cert.key;         #这里是私钥文件
    location / {
            root   html;
            index  index.html index.htm;
          }
}








源码安装的优点：模块化设计
构建Nginx服务器
1)gcc pcre-devel openssl-devel        //安装依赖包
2)解压   3）cd 进入目录
4）./configure   \
> --prefix=/usr/local/nginx   \                //指定安装路径
> --user=nginx   \                            //指定用户
> --group=nginx  \                            //指定组
> --with-http_ssl_module                        //开启SSL加密功能
5）make && make install    //编译并安装
nginx命令的用法
/usr/local/nginx/sbin/nginx                    //启动服务
/usr/local/nginx/sbin/nginx -s stop            //关闭服务
/usr/local/nginx/sbin/nginx -s reload        //重新加载配置文件
/usr/local/nginx/sbin/nginx –V                //查看软件信息
ln -s /usr/local/nginx/sbin/nginx /sbin/        //方便后期使用
netstat命令可以查看系统中启动的端口信息
-a显示所有端口的信息
-n以数字格式显示端口号
-t显示TCP连接的端口
-u显示UDP连接的端口
-l显示服务正在监听的端口信息，如httpd启动后，会一直监听80端口
-p显示监听端口的服务名称是什么（也就是程序名称）
nginx服务默认通过TCP 80端口监听客户端请求：
Nginx Web服务默认首页文档存储目录为/usr/local/nginx/html/，在此目录下默认有一个名为index.html的文件
升级Nginx服务器
前四步和安装相同
5）mv /usr/local/nginx/sbin/nginx{,a}
6) cp objs/nginx  /usr/local/nginx/sbin/         //拷贝新版本
7)make upgrade | killall nginx + 重新启动nginx       //升级

/usr/local/nginx/conf/nginx.conf
全局配置（用户名,日志,进程)
	worker_processes  1; //开启的进程
	#error_log  logs/error.log;  //错误日志文件
	#error_log  logs/error.log  notice;
	#error_log  logs/error.log  info;	
	worker_connections  1024;   //并发量	

http{
	server{
		listen 端口号;
		server_name 域名;
		root 路径;
	}
}
用户认证
1)修改/usr/local/nginx/conf/nginx.conf
	server_name  localhost;
	auth_basic "Input Password:";                        //认证提示符
	auth_basic_user_file "/usr/local/nginx/pass";        //认证密码文件存放路径
2)生成密码文件，创建用户及密码
htpasswd命令创建账户文件，需要确保系统中已经安装了httpd-tools。
1.安装httpd-tools
2.htpasswd -c /usr/local/nginx/pass 用户名  //追加用户，不使用-c选项
	-c-->"create"
3.重启Nginx服务
ctrl + v 按下键  按x键  //批量去注释
基于域名的虚拟主机
1)修改Nginx服务配置
server {
        listen   80;                                   //端口
        server_name  域名;                                       //域名
auth_basic "Input Password:";                          //认证提示符
        auth_basic_user_file "/usr/local/nginx/pass";  //认证密码文件
location / {
            root   网站根路径;                                   //指定网站根路径
            index  index.html index.htm;
       }  
}
2）创建网站根目录及对应首页文件
mkdir /usr/local/nginx/网站根路径
echo "www" > /usr/local/nginx/www/index.html
3）重启nginx服务

SSL虚拟主机
源码安装Nginx时必须使用--with-http_ssl_module参数，启用加密模块，对于需要进行SSL加密处理的站点添加ssl相关指令（设置网站需要的私钥和证书）。
加密算法一般分为对称算法、非对称算法、信息摘要。
对称算法有：AES、DES，主要应用在单机数据加密。
非对称算法有：RSA、DSA，主要应用在网络数据加密。
信息摘要：MD5、sha256，主要应用在数据完整性校验、数据秒传等。
1）生成私钥与证书
cd /usr/local/nginx/conf  //进入配置文件
openssl genrsa > cert.key                            //生成私钥
openssl req -new -x509 -key cert.key > cert.pem      //生成证书
2）修改Nginx配置文件，设置加密网站的虚拟主机
server {
        listen       443 ssl;
        server_name            www.c.com;
        ssl_certificate      cert.pem;         #这里是证书文件
        ssl_certificate_key  cert.key;         #这里是私钥文件
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        location / {
            	 root   html;
            	 index  index.html index.htm;
        		 }
    	   }
3）重启nginx服务


















